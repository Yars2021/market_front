name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [22.x]

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      id: node_build
      continue-on-error: true
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run build --if-present

    - name: Build tg message success
      if: steps.node_build.outcome == 'success'
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_DST }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: |
          Market frontend:
          Commit "${{ github.event.commits[0].message }}" by ${{ github.actor }} was built successfully!

    - name: Build tg message fail
      if: steps.node_build.outcome != 'success'
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_DST }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: |
          Market frontend:
          Build failed for commit "${{ github.event.commits[0].message }}" by ${{ github.actor }}!

  test:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [22.x]

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      id: node_test
      continue-on-error: true
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run build --if-present
    - run: npm test

    - name: Test tg message success
      if: steps.node_test.outcome == 'success'
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_DST }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: |
          Market frontend:
          Commit "${{ github.event.commits[0].message }}" by ${{ github.actor }} was tested successfully!

    - name: Test tg message fail
      if: steps.node_test.outcome != 'success'
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_DST }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: |
          Market frontend:
          Unit tests failed for commit "${{ github.event.commits[0].message }}" by ${{ github.actor }}!

  sonarqube:
    name: sonarqube
    needs: test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
  
      - name: NPM CI
        run: npm ci

      - name: NPM build
        run: npm run build --if-present

      - name: Test and coverage
        run: npm run test:coverage

      - name: SonarQube Scan
        id: sonarqube_scan
        uses: SonarSource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      - name: Sonarqube tg message success
        if: steps.sonarqube_scan.outcome == 'success'
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_DST }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            Market frontend:
            Commit "${{ github.event.commits[0].message }}" by ${{ github.actor }} was analyzed with Sonarqube successfully!
  
      - name: Test tg message fail
        if: steps.sonarqube_scan.outcome != 'success'
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_DST }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            Market frontend:
            Sonarqube analysis failed for commit "${{ github.event.commits[0].message }}" by ${{ github.actor }}!

  push_dockerhub:
    needs: sonarqube
  
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_NAME }}
          password: ${{ secrets.DOCKERHUB_KEY }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: yars20240201/market_frontend

      - name: Build and push Docker image
        id: dockerhub_push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Dockerhub tg message success
        if: steps.dockerhub_push.outcome == 'success'
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_DST }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            Market frontend:
            Commit "${{ github.event.commits[0].message }}" by ${{ github.actor }} was pushed to dockerhub as a docker image!
  
      - name: Dockerhub tg message fail
        if: steps.dockerhub_push.outcome != 'success'
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_DST }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            Market frontend:
            Docker image build failed for commit "${{ github.event.commits[0].message }}" by ${{ github.actor }}!

  deploy_to_vk:
    needs: push_dockerhub

    runs-on: ubuntu-latest
    steps:
      - name: Connect to remote
        id: deploy_vk
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SSH_HOST }}
          username: altlinux
          key: ${{ secrets.SSH_KEY }}
          port: 22
          script: |
            /home/altlinux/scripts/run_frontend

      - name: VK deploy
        if: steps.deploy_vk.outcome == 'success'
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_DST }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            Market frontend:
            New image was successfully deployed. The application is available at http://${{ secrets.SSH_HOST }}!

      - name: VK deploy
        if: steps.deploy_vk.outcome != 'success'
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_DST }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            Market frontend:
            New image was deployment failed!
